import Head from 'next/head'
import { Inter } from '@next/font/google'
import { useState } from 'react'
import { trpc } from '@/util/trpc';

// a landing page using pico.css
export default function Home() {
  const [loading, setLoading] = useState(false);
  const [input, setInput] = useState('');
  const { data, error, refetch } = trpc.generateEmail.useQuery({ text: input }, {
    enabled: false
  });

  async function handleSubmit() {
    setLoading(true);
    await refetch();
    console.log(data);
    setLoading(false);
  }
  return (
    <>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <meta name="viewport" content="width=device-width, initial-scale=1" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main className='container'>
        <hgroup>
          <h2>Teste com Next.js 13 e tRPC v10</h2>
          <h3>App para sugerir email de acordo com a necessidade apontada</h3>
        </hgroup>
        <article>
          <header>
            <hgroup>
              <h3>Descreva a necessidade</h3>
              <h5>Ex: Email para notificar os clientes do meu banco de dados sobre o lan√ßamento da minha plataforma de atendimento multi-canal chamada &quot;Patendimento&quot;</h5>
            </hgroup>
          </header>
          <input type="textbox" name="input" id="text-input" onChange={(e) => setInput(e.target.value)}/>
          <button onClick={handleSubmit} aria-busy={loading ? 'true' : 'false'} disabled={loading}>Enviar</button>
          <footer>
            { data ? data.trim().split("\n").map((item, idx) => {
              return (
                <span key={idx}>
                  {item}
                  <br/>
                </span>
              )
            }) : null }
          </footer>
        </article>
      </main>
    </>
  )
}
